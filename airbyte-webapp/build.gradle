import com.bmuschko.gradle.docker.tasks.image.*

plugins {
    id "base"
    id "com.github.node-gradle.node" version "3.1.1"
    id 'com.bmuschko.docker-remote-api'
}

def nodeVersion = System.getenv('NODE_VERSION') ?: '14.11.0'

node {
    download = true
    version = nodeVersion
}

npm_run_build {
    inputs.files fileTree('public')
    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    // todo (cgardens) - the plugin seems to ignore this value when the copy command is run. ideally the output would be place in build/app.
    outputs.dir project.buildDir
}

task test(type: NpmTask) {
    dependsOn assemble

    args = ['run', 'test', '--', '--watchAll=false', '--silent']
    inputs.files fileTree('src')
    inputs.file 'package.json'
    inputs.file 'package-lock.json'
}

assemble.dependsOn npm_run_build
build.finalizedBy test

task copyDocs(type: Copy) {
    from "${project.rootProject.projectDir}/docs/integrations"
    into "docker/bin/docs/integratbimions"
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

task copyBuild(type: Copy) {
    from "${project.projectDir}/build"
    into "docker/bin/build"
    exclude ".docker"
}

task copyNginx(type: Copy) {
    from "${project.projectDir}/nginx"
    into "docker/bin/nginx"
}

copyBuild.dependsOn npm_run_build
copyNginx.dependsOn npm_run_build
copyDocs.dependsOn npm_run_build
assemble.dependsOn copyDocs

// Use task types
task buildMyAppImage(type: DockerBuildImage) {
    dependsOn copyBuild
    dependsOn copyNginx
    dependsOn copyDocs
    inputDir = file('docker')
    images.add("airbyte/webapp:$version")
}
assemble.dependsOn(buildMyAppImage)
